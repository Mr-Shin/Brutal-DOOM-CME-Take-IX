#library "CVARS"
#include "zcommon.acs"



script 647 enter
{
    // Fade In
	sethudsize(160, 90, TRUE);
	setfont("BLASCR");
	
	if	(GameType () == GAME_SINGLE_PLAYER) 
		{
		HudMessageBold(s:"a"; HUDMSG_FADEOUT, 1, CR_BLACK, 0.1, 0.1, 0.1, 1.0);
		}

	//setfont("SmallFONT");
	//HudMessageBold(s:"Dev Build August 05 2017 - Do Not Distribute"; HUDMSG_PLAIN, 8, CR_WHITE, 2.0, 0.01, 9999.1, 1.0);
		
		
	//===================	
	//Sbar Type

	if	(GetCvar( "bd_sbartype") == 1) { GiveInventory("sbartype1", 1); }
	if	(GetCvar( "bd_sbartype") == 2) { GiveInventory("sbartype2", 1); }
	
	if	(GetCvar("bd_disablemapenhancements") == 0) 
	{ 
	ReplaceTextures("FLOOR5_3", "METAL52");
	ReplaceTextures("FLOOR5_2", "METAL52");
	ReplaceTextures("FLAT5", "METAL53");
	ReplaceTextures("FLOOR0_1", "METAL54");
	ReplaceTextures("FLOOR0_3", "METAL55");
	ReplaceTextures("FLOOR3_3", "METAL56");
	ReplaceTextures("TLITE6_5", "LITGEN7B");
	ReplaceTextures("TLITE6_6", "LITGEN9C");
	ReplaceTextures("FLAT2", "FLAT2B");
	ReplaceTextures("GRNLITE1", "GRNLIT1B");
	}	
	
	
    //ClearInventory();
    GiveInventory("CheckMarines", 1);
}

Script "BDDisableMapEnhancements" (VOID)
{
if	(GetCvar("bd_disablemapenhancements") == 1) { SetActorState(0,"Vanilla"); }
}

SCRIPT "BDInitiate" OPEN
{
	ReplaceTextures ("DSAND1", "SANDS1");
	ReplaceTextures ("DSAND3", "SANDS1");
	ReplaceTextures ("DSAND4", "SANDS1");
	ReplaceTextures ("DSAND5", "SANDS1");
	ReplaceTextures ("ETEX34", "SANDS1");
	ReplaceTextures ("WALL81", "SANDS1");
	ReplaceTextures ("ECEIL13", "SANDS1");
	ReplaceTextures ("ECEIL15", "SANDS1");
	ReplaceTextures ("GROUND20", "DESERT01");
	ReplaceTextures ("SLUDGE01", "SLIME08");
	ReplaceTextures ("DBRAIN1", "LFALL01");//Revilution Lava
	ReplaceTextures ("LFALL1", "LFALL01");
	ReplaceTextures ("LAVA1", "LAVAFL");
	ReplaceTextures ("LAVA2", "LAVAFL");
	ReplaceTextures ("LAVA3", "LAVAFL");
	ReplaceTextures ("LAVA4", "LAVAFL");
	ReplaceTextures ("LAVA01", "LAVAFL");
	ReplaceTextures ("LAVA02", "LAVAFL");
	ReplaceTextures ("LAVA03", "LAVAFL");
	ReplaceTextures ("LAVA04", "LAVAFL");
	ReplaceTextures ("LAVFALL1", "LFALL01");//Sunlust Lava
	ReplaceTextures ("BLODGR1", "LFALL01");//AV Lava
	ReplaceTextures ("SLMFALL1", "CRFAL01");//CRAPFALLS
	ReplaceTextures ("SLMFALL2", "CRFAL01");//CRAPFALLS
	ReplaceTextures ("SLMFALL3", "CRFAL01");//CRAPFALLS
	
	// Replaces similar textures so the flat checking scripts have less stuff
	ReplaceTextures ("NUKAGE3", "NUKAGE1");
	ReplaceTextures ("NUKAGE2", "NUKAGE1");
	ReplaceTextures ("SLIME04", "SLIME01");
	ReplaceTextures ("SLIME03", "SLIME01");
	ReplaceTextures ("SLIME02", "SLIME01");
	ReplaceTextures ("SLIME08", "SLIME05");
	ReplaceTextures ("SLIME06", "SLIME05");
	ReplaceTextures ("SLIME07", "SLIME05");
	ReplaceTextures ("BLOOD3", "BLOOD1");
	ReplaceTextures ("BLOOD2", "BLOOD1");
}	


script "BDRespawn" Respawn NET
{
//Sbar Type

	TakeInventory("sbartype1", 1);
	TakeInventory("sbartype2", 1);
	if	(GetCvar( "bd_sbartype") == 1) { GiveInventory("sbartype1", 1); }
	if	(GetCvar( "bd_sbartype") == 2) { GiveInventory("sbartype2", 1); }
}
Script 799 (VOID)
{

if
	(GetCvar("isrunningzandronum") == 1)
{
if	(GetCvar("bd_bloodamount") == 0) { SetActorState(0,"LowBlood"); }
if	(GetCvar("bd_bloodamount") == 1) { SetActorState(0,"LowBlood"); }
if	(GetCvar("bd_bloodamount") == 3) { SetActorState(0,"LotsOfBlood"); }
if	(GetCvar("bd_bloodamount") >= 4) { SetActorState(0,"AbsurdBlood"); }
}


if
	(GetCvar("isrunningzandronum") == 0)
{
if	(GetCvar("zdoombrutalblood") == 0) { SetActorState(0,"LowBlood"); }
if	(GetCvar("zdoombrutalblood") == 1) { SetActorState(0,"LowBlood"); }
if	(GetCvar("zdoombrutalblood") == 3) { SetActorState(0,"LotsOfBlood"); }
if	(GetCvar("zdoombrutalblood") >= 4) { SetActorState(0,"AbsurdBlood"); }
}


if
	(GetCvar("isrunningzandronum") == 1)
{
if	(GetCvar("bd_bloodamount") == 666)
	{
	SetActorState(0,"AbsurdBlood"); 
	GiveInventory("AnimuGore", 1);
	}
}

if
	(GetCvar("isrunningzandronum") == 0)
{
if	(GetCvar("zdoombrutalblood") == 666)
	{
	SetActorState(0,"AbsurdBlood"); 
	GiveInventory("AnimuGore", 1);
	}
}

}

Script 794 (VOID)//Making limbs not bounce with explosives
{
if	(GetCvar("bd_lowgraphicsmode") == 1) { SetActorState(0, "NoColision", 1); }
if	(GetCvar("zdoombrutaljanitor") == 1) { SetActorState(0, "NoColision", 1); }
}



Script "BDCHeckJanitor" (VOID)
{
if	(GetCvar("bd_lowgraphicsmode") == 1) { GiveInventory("LowGraphicsMode", 1); }
if	(GetCvar("zdoombrutaljanitor") == 1) { GiveInventory("LowGraphicsMode", 1); }
if	(GameType () == GAME_NET_DEATHMATCH) { GiveInventory("LowGraphicsMode", 1); }
}

Script "BDCHeckJanitor2" (VOID)
{
if	(GetCvar("bd_infinitecasings") == 0) { GiveInventory("LowGraphicsMode", 1); }
}

Script "BDCHeckJanitor3" (VOID)//Making limbs not bounce with explosives
{
if	(GetCvar("bd_lowgraphicsmode") == 1) { SetActorState(0, "NoColision", 1); }
if	(GetCvar("zdoombrutaljanitor") == 1) { SetActorState(0, "NoColision", 1); }
}

script "CombatBackPack" (void)
{
	SetAmmoCapacity("CMEClip1", 1000);
	SetAmmoCapacity("CMEClip2", 1150);
	SetAmmoCapacity("CMEAPBulletAmmo", 1350); //<-- Overly used statistic out of context.
	SetAmmoCapacity("CME50CalAmmo", 900);
	SetAmmoCapacity("CMEShell", 750);
	SetAmmoCapacity("CMENailAmmo", 1000);
	SetAmmoCapacity("CMERocketAmmo", 750);
	SetAmmoCapacity("CMEGrenadeAmmo", 75);
	SetAmmoCapacity("CME40mmGrenadeAmmo", 500);
	SetAmmoCapacity("CMEPipeBombAmmo", 200);
	SetAmmoCapacity("CMECell", 2000);
	delay(2);
	GiveInventory("Medikit",2);
	GiveInventory("Backpack",1);
	GiveInventory("BulletKit", 4);
	GiveInventory("CMEClip2", 200);
	GiveInventory("CMEShell",100); 
	GiveInventory("CMERocketAmmo",100);
	GiveInventory("CME40mmGrenadeAmmo", 50);
	GiveInventory("CMECell",200);
	GiveInventory("CMEGrenadeAmmo", 10);
	
}


Script "BDCHeckJanitor4" (VOID)
{



	if	(GetCvar("isrunningzandronum") == 1)
	{
	if	(GetCvar("bd_bloodamount") < 2) { SetActorState(0,"Vanish"); }
	}

	if	(GetCvar("isrunningzandronum") == 0)
	{
	if	(GetCvar("zdoombrutalblood") < 2) { SetActorState(0,"Vanish"); }
	}

}

Script 798 (VOID)
{
if	(GetCvar("bd_lowgraphicsmode") == 1) { GiveInventory("LowGraphicsMode", 1); }
if	(GetCvar("zdoombrutaljanitor") == 1) { GiveInventory("LowGraphicsMode", 1); }
}


Script 797 (VOID)
{
if	(GetCvar("bd_bloodamount") == 1) { SetActorState(0,"Vanish"); }
if	(GetCvar("bd_bloodamount") == 0) { SetActorState(0,"Vanish"); }
}


Script 796 (VOID)
{
if	(GetCvar("bd_classicmonsters") == 1) { SetActorState(0,"ReplaceVanilla"); }
}

Script 795 (VOID)
{
if	(GetCvar("bd_disabledecorations") == 1) { SetActorState(0,"Vanilla"); }
}
Script 5922 (VOID) NET
{
	//Sets the player's height to 28 and reduces their speed for slide kicks
 SetActorProperty(0, APROP_HEIGHT, 28);
 SetActorProperty(0, APROP_SPEED, 0.0);
}

Script 5923 (VOID) NET
{
	//Sets the player's height to 58 and resets their speed to normal after slide kicking
 SetActorProperty(0, APROP_HEIGHT, 58);
 SetActorProperty(0, APROP_SPEED, 1.0);
}

Script "PromixityMineHotkey" (VOID) NET
{
 GiveInventory("DoMine", 1);
}



Script 719 (VOID)
{
if	(GameType () == GAME_NET_DEATHMATCH) 
	SetActorState(0,"DM"); 
}

Script 728 (VOID)
{
if	(GetCvar("bd_nobulletpenetration") == 0) { TakeInventory("nopenetration", 1);}
if	(GetCvar("bd_nobulletpenetration") == 1) { GiveInventory("nopenetration", 1);}
if	(GetCvar("bd_shotgunstrap") == 1) { GiveInventory("useshotgunstrap", 1);}
if	(GetCvar("zdoombd_shotgunstrap") == 1) { GiveInventory("useshotgunstrap", 1);}
}

//Key cards, Taggert. What do they mean?

script "GiveAllPlayersRedCard" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "RedCard"))
        {
            GiveActorInventory(800 + p, "RedCard", 1);
        }
    }
}

script "GiveAllPlayersYellowCard" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "YellowCard"))
        {
            GiveActorInventory(800 + p, "YellowCard", 1);
        }
    }
}

script "GiveAllPlayersBlueCard" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "BlueCard"))
        {
            GiveActorInventory(800 + p, "BlueCard", 1);
        }
    }
}

script "GiveAllPlayersRedSkull" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "RedSkull"))
        {
            GiveActorInventory(800 + p, "RedSkull", 1);
        }
    }
}

script "GiveAllPlayersYellowSkull" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "YellowSkull"))
        {
            GiveActorInventory(800 + p, "YellowSkull", 1);
        }
    }
}

script "GiveAllPlayersBlueSkull" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "BlueSkull"))
        {
            GiveActorInventory(800 + p, "BlueSkull", 1);
        }
    }
}

Script "CheckRocketBackblast" (VOID)
{
if	(GetCvar("bd_rocketbackblast") == 0) { SetACtorState(0, "Disappear"); }
}


script "StarterPackDynamicProgressionFix" (void) NET
{
	//Initialize variables
    str LevelName = StrParam(n: PRINTNAME_LEVELNAME);
	str LevelLump = StrParam(n: PRINTNAME_LEVEL);
	//PrintBold(s:LevelName);
	if(GetCvar("BrutalSpawnBalance") == 671)
	{
		//Episode I
		if((StrCmp(LevelName, StrParam(s: "Hangar")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY01"))== 0))
		{
			SetActorState(0, "DiceTier1");
		}
		if((StrCmp(LevelName, StrParam(s: "Nukage Processing")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY02"))== 0))
		{
			SetActorState(0, "DiceTier1");
		}
		if((StrCmp(LevelName, StrParam(s: "Communications Center")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY03"))== 0))
		{
			SetActorState(0, "DiceTier1");
		}
		if((StrCmp(LevelName, StrParam(s: "Life Support Facility")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY04"))== 0))
		{
			SetActorState(0, "DiceTier1");
		}
		if((StrCmp(LevelName, StrParam(s: "Marine HQ")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY05"))== 0))
		{
			SetActorState(0, "DiceTier1");
		}
		if((StrCmp(LevelName, StrParam(s: "Nuclear Power Plant")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY06"))== 0))
		{
			SetActorState(0, "DiceTier2");
		}
		if((StrCmp(LevelName, StrParam(s: "Staging Area")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY07"))== 0))
		{
			SetActorState(0, "DiceTier2");
		}
		if((StrCmp(LevelName, StrParam(s: "Lab Complex Entrance")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY08"))== 0))
		{
			SetActorState(0, "DiceTier2");
		}
		if((StrCmp(LevelName, StrParam(s: "Bio Labs")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY09"))== 0))
		{
			SetActorState(0, "DiceTier2");
		}
		if((StrCmp(LevelName, StrParam(s: "Portal Testing Labs")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY10"))== 0))
		{
			SetActorState(0, "DiceTier2");
		}
		
		//Episode II
		if((StrCmp(LevelName, StrParam(s: "Return to Earth")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY11"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Roadblocks")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY12"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Industrial District")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY13"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Warzone")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY14"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Twisted Neighborhood")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY15"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Dead Streets")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY16"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Final Destination")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY17"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "Eye of the Storm")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY18"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY19"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		if((StrCmp(LevelName, StrParam(s: "The Tower")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY20"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		
		//Episode III
		if((StrCmp(LevelLump, StrParam(s: "EDAY21"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelName, StrParam(s: "Blood Swamp")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY22"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelName, StrParam(s: "Stronghold")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY23"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelName, StrParam(s: "House of the Hell Nobles")) == 0) && (StrCmp(LevelLump, StrParam(s: "EDAY24"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY25"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY26"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY27"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY28"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY29"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		if((StrCmp(LevelLump, StrParam(s: "EDAY30"))== 0))
		{
			SetActorState(0, "DiceTier4");
		}
		
		//Secret Levels (Nazi map not necessary)
		if((StrCmp(LevelLump, StrParam(s: "EDAY31"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		
		if((StrCmp(LevelLump, StrParam(s: "EDAY32"))== 0))
		{
			SetActorState(0, "DiceTier3");
		}
		
		//For the Valiant megawad
		if((StrCmp(LevelName, StrParam(s: "The Eagle Has Landed")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP25"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Blast Wave")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP26"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Rocket Zone II")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP27"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "A Lightbridge Too Far")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP28"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Red Shift")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP29"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Electric Nightmare")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP30"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		
		//For KDiZD
		if((StrCmp(LevelName, StrParam(s: "Hangar")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M1"))== 0))
		{
			SetActorState(0, "EarlyLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Nuclear Plant")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M2"))== 0))
		{
			SetActorState(0, "EarlyLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Toxin Refinery")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M3"))== 0))
		{
			SetActorState(0, "LowLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Command Control")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M4"))== 0))
		{
			SetActorState(0, "LowLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Phobos Lab")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M5"))== 0))
		{
			SetActorState(0, "LowLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Central Processing")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M6"))== 0))
		{
			SetActorState(0, "MidLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Computer Station")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M7"))== 0))
		{
			SetActorState(0, "MidLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Phobos Anomaly")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M8"))== 0))
		{
			SetActorState(0, "MidLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Military Base")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M9"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
		if((StrCmp(LevelName, StrParam(s: "Penultimate Evil")) == 0) && (StrCmp(LevelLump, StrParam(s: "Z1M10"))== 0))
		{
			SetActorState(0, "HighLevelSpawn");
		}
	}
}

Script "StarterPackWolfensteinBuzzsawFix" (void) NET
{
	//Initialize variables
    str LevelName = StrParam(n: PRINTNAME_LEVELNAME);
	str LevelLump = StrParam(n: PRINTNAME_LEVEL);
	
	if((StrCmp(LevelName, StrParam(s: "Wolfenstein")) == 0) && (StrCmp(LevelLump, StrParam(s: "MAP32"))== 0))
	{
		SetActorState(0, "ReplaceMG42",true);
	}
}

Script "ChangeMarineScript" (void) NET
{
if	(GetCvar("bd_disablemarines") == 1) { SetActorState(0,"ReplaceBlursphere"); }
}



script 374 (void) // Footstep Sounds
{  
  
  if (CheckActorFloorTexture(0, "FWATER1"))    GiveInventory("IsOverWater", 1);
	if (CheckActorFloorTexture(0, "FWATER2"))    GiveInventory("IsOverWater", 1);
	if (CheckActorFloorTexture(0, "FWATER3"))    GiveInventory("IsOverWater", 1);
	if (CheckActorFloorTexture(0, "FWATER4"))    GiveInventory("IsOverWater", 1);
	
  if (CheckActorFloorTexture(0, "NUKAGE1"))    GiveInventory("IsOverNukage", 1);
  if (CheckActorFloorTexture(0, "NUKAGE2"))    GiveInventory("IsOverNukage", 1);
  if (CheckActorFloorTexture(0, "NUKAGE3"))    GiveInventory("IsOverNukage", 1);
  if (CheckActorFloorTexture(0, "NUKAGE4"))    GiveInventory("IsOverNukage", 1);
	
  	
  if (CheckActorFloorTexture(0, "SLIME01"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME02"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME03"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME04"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME05"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME06"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME07"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME08"))    GiveInventory("IsOverSlime", 1);
  
  if (CheckActorFloorTexture(0, "SLIME09"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "SLIME10"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "SLIME11"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "SLIME12"))    GiveInventory("IsOverLava", 1);
  
  if (CheckActorFloorTexture(0, "LAVA1"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "LAVA2"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "LAVA3"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "LAVA4"))    GiveInventory("IsOverLava", 1);
	
  if (CheckActorFloorTexture(0, "BLOOD1"))    GiveInventory("IsOverBlood", 1);
  if (CheckActorFloorTexture(0, "BLOOD2"))    GiveInventory("IsOverBlood", 1);
  if (CheckActorFloorTexture(0, "BLOOD3"))    GiveInventory("IsOverBlood", 1);
  if (CheckActorFloorTexture(0, "BLOOD4"))    GiveInventory("IsOverBlood", 1);
  
  
  
  if (CheckActorFloorTexture(0, "FLOOR6_1"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "FLOOR6_2"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "SANDS1"))    GiveInventory("IsOverGravel", 1);
  if (CheckActorFloorTexture(0, "SANDS2"))    GiveInventory("IsOverGravel", 1);
  
    
  
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "FLAT10"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "GRASS1"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "GRASS2"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "GRASS3"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "MFLR8_4"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "RROCK16"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "RROCK17"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "RROCK18"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "RROCK19"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "RROCK20"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverDirt", 1);
  
  
  
  if (CheckActorFloorTexture(0, "CEIL1_2"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "FLAT1_3"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "FLAT4"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "FLAT20"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "FLAT23"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "FLAT22"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal", 1);
  
  if (CheckActorFloorTexture(0, "GATE1"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "GATE2"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "GATE3"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "GATE4"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverMetal2", 1);
  
  if (CheckActorFloorTexture(0, "FLAT1"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLAT1_1"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLAT1_2"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLAT1_3"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLAT5_6"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLAT5_7"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLAT5_8"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "FLOOR5_4"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "GRNROCK"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "MFLR8_2"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "MFLR8_3"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK03"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK03"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK04"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK09"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK10"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK11"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK12"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK13"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK14"))    GiveInventory("IsOverRock", 1);
  if (CheckActorFloorTexture(0, "RROCK15"))    GiveInventory("IsOverRock", 1);
  
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSnow", 1);
  
  if (CheckActorFloorTexture(0, "CEIL1_1"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "CRATOP1"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "CRATOP2"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "FLAT5_1"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "FLAT5_2"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverWood", 1);
  
  
  if (CheckActorFloorTexture(0, "CEIL1_3"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "CEIL3_3"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "CEIL3_4"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "CEIL3_4"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "COMP01"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "CONS1_1"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "CONS1_5"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "CONS1_7"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT2"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT3"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT8"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT9"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT17"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT18"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLAT19"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLOOR0_5"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLOOR0_6"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLOOR0_7"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLOOR3_3"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLOOR4_1"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "FLOOR4_5"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverTile", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverTile", 1);
  
  if (CheckActorFloorTexture(0, "DEM1_1"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "DEM1_2"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "DEM1_3"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "DEM1_4"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "DEM1_5"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "DEM1_6"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "FLOOR4_6"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "FLOOR4_8"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "FLOOR5_1"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "FLOOR5_2"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "FLOOR5_3"))    GiveInventory("IsOverTile2", 1);
  if (CheckActorFloorTexture(0, "FLOOR7_2"))    GiveInventory("IsOverTile2", 1);
  
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSlimy", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSlimy", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverSlimy", 1);
  
  if (CheckActorFloorTexture(0, "SANDS1"))    GiveInventory("IsOverSand", 1);
  if (CheckActorFloorTexture(0, "SANDS2"))    GiveInventory("IsOverSand", 1);
  
  

}




Script "BD_CheckBloodIntensity" (VOID)
{

	if	(GetCvar("isrunningzandronum") == 1)
	{
	if	(GetCvar( "bd_bloodamount") == 0) { SetActorState(0,"LowBlood"); }
	if	(GetCvar( "bd_bloodamount") == 1) { SetActorState(0,"LowBlood"); }
	if	(GetCvar( "bd_bloodamount") == 3) { SetActorState(0,"LotsOfBlood"); }
	if	(GetCvar( "bd_bloodamount") >= 4) { SetActorState(0,"AbsurdBlood"); }
	}


	if	(GetCvar("isrunningzandronum") == 0)
	{
	if	(GetCvar("zdoombrutalblood") == 0) { SetActorState(0,"LowBlood"); }
	if	(GetCvar("zdoombrutalblood") == 1) { SetActorState(0,"LowBlood"); }
	if	(GetCvar("zdoombrutalblood") == 3) { SetActorState(0,"LotsOfBlood"); }
	if	(GetCvar("zdoombrutalblood") == 4) { SetActorState(0,"AbsurdBlood"); }
	}


	if	(GetCvar("isrunningzandronum") == 1)
	{
		if	(GetCvar("bd_bloodamount") >= 5)
			{
			SetActorState(0,"AbsurdBlood"); 
			GiveInventory("AnimuGore", 1);
			}
	}

	if	(GetCvar("isrunningzandronum") == 0)
	{
	if	(GetCvar("zdoombrutalblood") >= 5)
		{
		SetActorState(0,"AbsurdBlood"); 
		GiveInventory("AnimuGore", 1);
		}
	}

}




script 375 (void) ///Check if Over Dirt or Grass
{
  if (CheckActorFloorTexture(0, "GRASS1"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "GRASS2"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "GRASS3"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "RROCK19"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "RROCK20"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "FLAT10"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "FLAT5"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "FLOOR7_1"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "MFLR8_2"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "MFLR8_4"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "RROCK03"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "RROCK16"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "RROCK17"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "RROCK18"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "DESERT01"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "DESERT02"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "DESERT03"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "JUNKY15"))    GiveInventory("IsOverGrass", 1);
  if (CheckActorFloorTexture(0, "SANDS1"))    GiveInventory("IsOverSand", 1);
  if (CheckActorFloorTexture(0, "SANDS2"))    GiveInventory("IsOverSand", 1);

}

Script "BDCheckDecorations" (VOID)
{
if	(GetCvar("bd_disabledecorations") == 1) { SetActorState(0,"Vanilla"); }
}

script "BD_CheckIfOverLiquid" (void) //Water Small Splash
{
	if (CheckActorFloorTexture(0, "FWATER1"))    GiveInventory("IsOverWater", 1);
	if (CheckActorFloorTexture(0, "FWATER2"))    GiveInventory("IsOverWater", 1);
	if (CheckActorFloorTexture(0, "FWATER3"))    GiveInventory("IsOverWater", 1);
	if (CheckActorFloorTexture(0, "FWATER4"))    GiveInventory("IsOverWater", 1);
	
  if (CheckActorFloorTexture(0, "NUKAGE1"))    GiveInventory("IsOverNukage", 1);
  if (CheckActorFloorTexture(0, "NUKAGE2"))    GiveInventory("IsOverNukage", 1);
  if (CheckActorFloorTexture(0, "NUKAGE3"))    GiveInventory("IsOverNukage", 1);
  if (CheckActorFloorTexture(0, "NUKAGE4"))    GiveInventory("IsOverNukage", 1);
	
  	
  if (CheckActorFloorTexture(0, "SLIME01"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME02"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME03"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME04"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME05"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME06"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME07"))    GiveInventory("IsOverSlime", 1);
  if (CheckActorFloorTexture(0, "SLIME08"))    GiveInventory("IsOverSlime", 1);
  
  if (CheckActorFloorTexture(0, "SLIME09"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "SLIME10"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "SLIME11"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "SLIME12"))    GiveInventory("IsOverLava", 1);
  
  if (CheckActorFloorTexture(0, "LAVA1"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "LAVA2"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "LAVA3"))    GiveInventory("IsOverLava", 1);
  if (CheckActorFloorTexture(0, "LAVA4"))    GiveInventory("IsOverLava", 1);
	
  if (CheckActorFloorTexture(0, "BLOOD1"))    GiveInventory("IsOverBlood", 1);
  if (CheckActorFloorTexture(0, "BLOOD2"))    GiveInventory("IsOverBlood", 1);
  if (CheckActorFloorTexture(0, "BLOOD3"))    GiveInventory("IsOverBlood", 1);
  if (CheckActorFloorTexture(0, "BLOOD4"))    GiveInventory("IsOverBlood", 1);
}

Script "BDCheckWaterRipples" (VOID)
{
if	(GetCvar("bd_disablewaterripples2") > 0) { GiveInventory("Clip2", 10); }
}
Script "BDFootsteps" (VOID)
{
if	(GetCvar("bd_footstepsounds") == 0) { GiveInventory("FootStepDisabled", 1); }
}
Script "CheckVoxels" (VOID)
{
if	(GetCvar("bd_voxeldec") == 0) { SetACtorState(0, "Disappear"); }
}
//Ammo Options
//Clip 
Script "ToggleClipSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMEClip1") == 1)
	{
	SetActorState(0,"ReplaceClip",true);
	}
	else if (GetCvar("CME_NoCMEClip12") == 1)
	{
	SetActorState(0,"ReplaceClip",true);
	}
	else if (GetCvar("CME_NoCMECLip22") == 1)
	{
	SetActorState(0,"ReplaceClip",true);
	}
	else if (GetCvar("CME_NoCMEAPBullets") == 1)
	{
	SetActorState(0,"ReplaceClip",true);
	}
	else if (GetCvar("CME_NoCMEAPChain") == 1)
	{
	SetActorState(0,"ReplaceClip",true);
	}
	else if (GetCvar("CME_NoCME50Cal") == 1)
	{
	SetActorState(0,"ReplaceClip",true);
	}
}
//Clip Box
Script "ToggleClipBoxSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMEClip1Box") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip1Box2") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip2Box2") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip2Box3") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip2Box4") == 1)
	{
	SetActorState(0,"RepalceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip2Box5") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip2Box6") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEClip2Box7") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEAPBox1") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEAPBox2") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
else if (GetCvar("CME_NoCMEAPBox3") == 1)
	{
	SetActorState(0,"ReplaceClipBox",true);
	}
}
//Shell
Script "ToggleShellSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMEShell2") == 1)
	{
	SetActorState(0,"ReplaceShell",true);
	}
else if (GetCvar("CME_NoCMEShell3") == 1)
	{
	SetActorState(0,"ReplaceShell",true);
	}
else if (GetCvar("CME_NoCMEShell4") == 1)
	{
	SetActorState(0,"ReplaceShell",true);
	}
else if (GetCvar("CME_NoCMENailAmmo") == 1)
	{
	SetActorState(0,"ReplaceShell",true);
	}
}
//Shell Box
Script "ToggleShellBoxSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMEShellBox2") == 1)
	{
	SetActorState(0, "ReplaceShellBox",true);
	}
else if (GetCvar("CME_NoCMEShellBox3") == 1)
	{
	SetActorState(0, "ReplaceShellBox",true);
	}
else if (GetCvar("CME_NoCMEShellBox4") == 1)
	{
	SetActorState(0, "ReplaceShellBox",true);
	}
else if (GetCvar("CME_NoCMEShellBox5") == 1)
	{
	SetActorState(0, "ReplaceShellBox",true);
	}
else if (GetCvar("CME_NoCMEShellBox6") == 1)
	{
	SetActorState(0, "ReplaceShellBox",true);
	}
else if (GetCvar("CME_NoCMENailBox") == 1)
	{
	SetActorState(0, "ReplaceShellBox",true);
	}
}
//Rocket Ammo
Script "ToggleRocketAmmoSpawn" (VOID) NET
{
if (GetCvar("CME_NoCME40MMGrenadeAmmo") == 1)
	{
	SetActorState(0, "ReplaceRocketAmmo",true);
	}
else if (GetCvar("CME_NoCME40MMGrenadeAmmo2") == 1)
	{
	SetActorState(0, "ReplaceRocketAmmo",true);
	}
else if (GetCvar("CME_NoCMEPipeBombAmmo") == 1)
	{
	SetActorState(0, "ReplaceRocketAmmo",true);
	}
}
//Rocket Box
Script "ToggleRocketBoxSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMERocketBox2") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCMERocketBox3") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCMERocketBox4") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCMEGrenadeBox") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCME40MMGrenadeBox") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCME40MMGrenadeBox2") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCME40MMGrenadeBox3") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCME40MMGrenadeBox4") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
else if (GetCvar("CME_NoCMEPipeBombBox") == 1)
	{
	SetActorState(0, "ReplaceRocketBox",true);
	}
}
//Cell
Script "ToggleCellSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMECell2") == 1)
	{
	SetActorState(0, "ReplaceCell",true);
	}
else if (GetCvar("CME_NoCMECell3") == 1)
	{
	SetActorState(0, "ReplaceCell",true);
	}
}
//Cell Pack
Script "ToggleCellPackSpawn" (VOID) NET
{
if (GetCvar("CME_NoCMECellPack2") == 1)
	{
	SetActorState(0, "ReplaceCellPack",true);
	}
else if (GetCvar("CME_NoCMECellPack3") == 1)
	{
	SetActorState(0, "ReplaceCellPack",true);
	}
else if (GetCvar("CME_NoCMECellPack4") == 1)
	{
	SetActorState(0, "ReplaceCellPack",true);
	}
}
//Power Ups
//Spheres
//SoulSpheres
Script "ToggleSuperchargeSpawn" (VOID) NET
{
If (GetCvar("CME_NoBetterLifeSphere") == 1)
	{
	SetActorState(0, "ReplaceSupercharge",true);
	}
else if  (GetCvar("CME_NoGreaterLifeSphere") == 1)
	{
	SetActorState(0, "ReplaceSupercharge",true);
	}
}
//Megasphere
Script "ToggleMegasphereSpawn" (VOID) NET
{
If (GetCvar("CME_NoBetterEnergySphere") == 1)
	{
	SetActorState(0, "ReplaceMegaSphere",true);
	}
else if  (GetCvar("CME_NoUltraSphere") == 1)
	{
	SetActorState(0, "ReplaceMegaSphere",true);
	}
}
//God Sphere
Script "ToggleGodSphereSpawn" (VOID) NET
{
if (GetCvar("CME_NoInvulnerabilitySphere2") == 1)
	{
	SetActorState(0, "ReplaceGodOrb",true);
	}
}
//Stimpack
Script "ToggleStimpackSpawn" (VOID) NET
{
if (GetCvar("CME_NoStimpack3") == 1)
	{
	SetActorState(0, "ReplaceStimpack",true);
	}
else if (GetCvar("CME_NoBerserkStimpack") == 1)
		{
		SetActorState(0, "ReplaceStimpack",true);
		}
}
//Medikit
Script "ToggleMedikitSpawn" (VOID) NET
{
if (GetCvar("CME_NoMedikit3") == 1)
	{
	SetActorState(0, "ReplaceMedikit",true);
	}
else if (GetCvar("CME_NoMedikit4") == 1)
	{
	SetActorState(0, "ReplaceMedikit",true);
	}
else if (GetCvar("CME_NoMedipack") == 1)
	{
	SetActorState(0, "ReplaceMedikit",true);
	}
}
//Rad Suit
Script "ToggleRadSuitSpawn" (VOID) NET
{
if (GetCvar("CME_NoRadSuit2") == 1)
	{
	SetActorState(0, "ReplaceRadSuit",true);
	}
else if (GetCvar("CME_NoRadSuit3") == 1)
	{
	SetActorState(0, "ReplaceRadSuit",true);
	}
}
//Berserk
Script "ToggleBerserkSpawn" (VOID) NET
{
if (GetCvar("CME_NoBerserkPack2") == 1)
	{
	SetActorState(0, "ReplaceBerserk",true);
	}
else if (GetCvar("CME_NoMegaBerserk") == 1)
	{
	SetActorState(0, "ReplaceBerserk",true);
	}
}
//All Map
Script "ToggleAllMapSpawn" (VOID) NET
{
if (GetCvar("CME_NoAllMap2") == 1)
	{
	SetActorState(0, "ReplaceAllMap",true);
	}
}
//LAV
Script "ToggleLAVSpawn" (VOID) NET
{
if (GetCvar("CME_NoInfraredVisor2") == 1)
	{
	SetActorState(0, "ReplaceLAV",true);
	}
}
//Backpack
Script "ToggleBackpackSpawn" (VOID) NET
{
if (GetCvar("CME_NoCombatBackpack") == 1)
	{
	SetActorState(0, "ReplaceBackpack",true);
	}
}
//Green Armor
Script "ToggleGreenArmorSpawn" (VOID) NET
{
if (GetCvar("CME_NoLightChestPlate") == 1)
	{
	SetActorState(0, "ReplaceGreenArmor",true);
	}
else if (GetCvar("CME_NoLightArmor") == 1)
	{
	SetActorState(0, "ReplaceGreenArmor",true);
	}
else if (GetCvar("CME_NoLightTechArmor") == 1)
	{
	SetActorState(0, "ReplaceGreenArmor",true);
	}
else if (GetCvar("CME_NoMediumTechArmor") == 1)
	{
	SetActorState(0, "ReplaceGreenArmor",true);
	}
}
//Blue Armor
Script "ToggleBlueArmorSpawn" (VOID) NET
{
if (GetCvar("CME_NoHeavyChestplate") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
else if (GetCvar("CME_NoHeavyArmor") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
else if (GetCvar("CME_NoHeavyTechArmor") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
else if (GetCvar("CME_NoDemonVest") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
else if (GetCvar("CME_NoDemonArmor") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
else if (GetCvar("CME_NoDemonVest") == 1)
	{
	SetActorState(0, "CME_NoDemonArmor2",true);
	}
else if (GetCvar("CME_NoDemonTechArmor") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
else if (GetCvar("CME_NoEliteArmor") == 1)
	{
	SetActorState(0, "ReplaceBlueArmor",true);
	}
}
//Health Bonus
Script "ToggleHealthBonusSpawn" (VOID) NET
{
if (GetCvar("CME_NoHealthPlus2") == 1)
	{
	SetActorState(0, "ReplaceHealthBonus",true);
	}
else if (GetCvar("CME_NoHealthPlus3") == 1)
	{
	SetActorState(0, "ReplaceHealthBonus",true);
	}
else if (GetCvar("CME_NoStrongHealthPlus") == 1)
	{
	SetActorState(0, "ReplaceHealthBonus",true);
	}
else if (GetCvar("CME_NoStrongHealthPlus2") == 1)
	{
	SetActorState(0, "ReplaceHealthBonus",true);
	}
else if (GetCvar("CME_NoSuperHealthPlus") == 1)
	{
	SetActorState(0, "ReplaceHealthBonus",true);
	}
}
//Armor Bonus
Script "ToggleArmorBonusSpawn" (VOID) NET
{
if (GetCvar("CME_NoBloodArmorBonus") == 1)
	{
	SetActorState(0, "ReplaceArmorBonus",true);
	}
else if (GetCvar("CME_NoHelmetArmorBonus") == 1)
	{
	SetActorState(0, "ReplaceArmorBonus",true);
	}
else if (GetCvar("CME_NoHelmetArmorBonus2") == 1)
	{
	SetActorState(0, "ReplaceArmorBonus",true);
	}
else if (GetCvar("CME_NoArmorShard2") == 1)
	{
	SetActorState(0, "ReplaceArmorBonus",true);
	}
else if (GetCvar("CME_NoArmorShard3") == 1)
	{
	SetActorState(0, "ReplaceArmorBonus",true);
	}
else if (GetCvar("CME_NoQuakeArmorShard") == 1)
	{
	SetActorState(0, "ReplaceArmorBonus",true);
	}
}
script "CrueltyBonus" (VOID) NET
{
	if(GetCvar("nodoomguytalk") == 1)
	{
		
		SetActorProperty(0, APROP_HEALTH, GetActorProperty(0,APROP_HEALTH)+5);
	}
	else
	{
		ActivatorSound("CrueltyBonus",127);
		SetActorProperty(0, APROP_HEALTH, GetActorProperty(0,APROP_HEALTH)+5);
	}
}