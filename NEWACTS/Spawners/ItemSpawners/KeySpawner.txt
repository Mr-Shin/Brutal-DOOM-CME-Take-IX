Actor BlueCardSpawner : CMEItemSpawner Replaces BlueCard
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_Jump(256, "SpawnBlueCard")
		Stop	
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
		TNT1 A 0 A_Jump(256, "SpawnBlueCard")
		DiceTier2:
		TNT1 A 0 A_Jump(256, "SpawnBlueCard")
		DiceTier3:
		TNT1 A 0 A_Jump(256, "SpawnBlueCard")
		DiceTier4:
		TNT1 A 0 A_Jump(256, "SpawnBlueCard")
	SpawnBlueCard:
		TNT1 A 0 A_SpawnItemEx("BlueKeyCard",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288)
		Goto Waiting
	}
}


Actor RedCardSpawner : CMEItemSpawner Replaces RedCard
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_Jump(256, "SpawnRedCard")
		Stop	
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
		TNT1 A 0 A_Jump(256, "SpawnRedCard")
		DiceTier2:
		TNT1 A 0 A_Jump(256, "SpawnRedCard")
		DiceTier3:
		TNT1 A 0 A_Jump(256, "SpawnRedCard")
		DiceTier4:
		TNT1 A 0 A_Jump(256, "SpawnRedCard")
	SpawnRedCard:
		TNT1 A 0 A_SpawnItemEx("RedKeyCard",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288)
		Goto Waiting
	}
}


Actor YellowCardSpawner : CMEItemSpawner Replaces YellowCard
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_Jump(256, "SpawnYellowCard")
		Stop	
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
		TNT1 A 0 A_Jump(256, "SpawnYellowCard")
		DiceTier2:
		TNT1 A 0 A_Jump(256, "SpawnYellowCard")
		DiceTier3:
		TNT1 A 0 A_Jump(256, "SpawnYellowCard")
		DiceTier4:
		TNT1 A 0 A_Jump(256, "SpawnYellowCard")
	SpawnYellowCard:
		TNT1 A 0 A_SpawnItemEx("YellowKeyCard",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288)
		Goto Waiting
	}
}

Actor BlueSkullSpawner : CMEItemSpawner Replaces BlueSkull
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_Jump(256, "SpawnBlueSkull")
		Stop	
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
		TNT1 A 0 A_Jump(256, "SpawnBlueSkull")
		DiceTier2:
		TNT1 A 0 A_Jump(256, "SpawnBlueSkull")
		DiceTier3:
		TNT1 A 0 A_Jump(256, "SpawnBlueSkull")
		DiceTier4:
		TNT1 A 0 A_Jump(256, "SpawnBlueSkull")
	SpawnBlueSkull:
		TNT1 A 0 A_SpawnItemEx("BlueSkullKey",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288)
		Goto Waiting
	}
}

Actor RedSkullSpawner : CMEItemSpawner Replaces RedSkull
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_Jump(256, "SpawnRedSkull")
		Stop	
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
		TNT1 A 0 A_Jump(256, "SpawnRedSkull")
		DiceTier2:
		TNT1 A 0 A_Jump(256, "SpawnRedSkull")
		DiceTier3:
		TNT1 A 0 A_Jump(256, "SpawnRedSkull")
		DiceTier4:
		TNT1 A 0 A_Jump(256, "SpawnRedSkull")
	SpawnRedSkull:
		TNT1 A 0 A_SpawnItemEx("RedSkullKey",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288)
		Goto Waiting
	}
}

Actor YellowSkullSpawner : CMEItemSpawner Replaces YellowSkull
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_Jump(256, "SpawnYellowSkull")
		Stop	
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
		TNT1 A 0 A_Jump(256, "SpawnYellowSkull")
		DiceTier2:
		TNT1 A 0 A_Jump(256, "SpawnYellowSkull")
		DiceTier3:
		TNT1 A 0 A_Jump(256, "SpawnYellowSkull")
		DiceTier4:
		TNT1 A 0 A_Jump(256, "SpawnYellowSkull")
	SpawnYellowSkull:
		TNT1 A 0 A_SpawnItemEx("YellowSkullKey",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288)
		Goto Waiting
	}
}



ACTOR BlueKeyCard : CustomInventory 
{
+FLOORCLIP
+DONTGIB
Inventory.PickUpMessage "Picked up a blue keycard."
Inventory.PickUpSound "PickUps/keycard"
States
	{
	Spawn:
		TNT1 A 0
		//TNT1 A 0 A_SpawnItemEx("EvidenceCheckerBlueKey", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Exist:
		BKEY A 10
		BKEY B 10 BRIGHT
		Loop
	PickUp:
		TNT1 A 1 A_GiveInventory("BlueCard",1)
		TNT1 A 1 ACS_NamedExecuteAlways("GiveAllPlayersBlueCard", 0)
		Stop
	}
}

ACTOR RedKeyCard : CustomInventory
{
+FLOORCLIP
+DONTGIB
Inventory.PickUpMessage "Picked up a red keycard."
Inventory.PickUpSound "PickUps/keycard"
States
	{
	Spawn:
		RKEY A 10
		RKEY B 10 BRIGHT
		Loop
	PickUp:
		TNT1 A 1 A_GiveInventory("RedCard",1)
		TNT1 A 1 ACS_NamedExecuteAlways("GiveAllPlayersRedCard", 0)
		Stop
	}
}

ACTOR YellowKeyCard : CustomInventory
{
+FLOORCLIP
+DONTGIB
Inventory.PickUpMessage "Picked up a yellow keycard."
Inventory.PickUpSound "PickUps/keycard"
States
	{
	Spawn:
		YKEY A 10
		YKEY B 10 BRIGHT
		Loop
	PickUp:
		TNT1 A 1 A_GiveInventory("YellowCard",1)
		TNT1 A 1 ACS_NamedExecuteAlways("GiveAllPlayersYellowCard", 0)
		Stop
	}
}

ACTOR BlueSkullKey : CustomInventory 
{
+FLOORCLIP
+DONTGIB
Inventory.PickUpMessage "Picked up a blue skull key."
Inventory.PickUpSound "PickUps/skullkey"
States
	{
	Spawn:
		TNT1 A 0
		//TNT1 A 0 A_SpawnItemEx("EvidenceCheckerBlueSkull", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
	Exist:
		BSKU A 10
		BSKU B 10 BRIGHT
		Loop
	PickUp:
		TNT1 A 1 A_GiveInventory("BlueSkull",1)
		TNT1 A 1 ACS_NamedExecuteAlways("GiveAllPlayersBlueSkull", 0)
		Stop
	}
}

ACTOR RedSkullKey : CustomInventory
{
+FLOORCLIP
+DONTGIB
Inventory.PickUpMessage "Picked up a red skull key."
Inventory.PickUpSound "PickUps/skullkey"
States
	{
	Spawn:
		RSKU A 10
		RSKU B 10 BRIGHT
		Loop
	PickUp:
		TNT1 A 1 A_GiveInventory("RedSkull",1)
		TNT1 A 1 ACS_NamedExecuteAlways("GiveAllPlayersRedSkull", 0)
		Stop
	}
}

ACTOR YellowSkullKey : CustomInventory
{
+FLOORCLIP
+DONTGIB
Inventory.PickUpMessage "Picked up a yellow skull key."
Inventory.PickUpSound "PickUps/skullkey"
States
	{
	Spawn:
		YSKU A 10
		YSKU B 10 BRIGHT
		Loop
	PickUp:
		TNT1 A 1 A_GiveInventory("YellowSkull",1)
		TNT1 A 1 ACS_NamedExecuteAlways("GiveAllPlayersYellowSkull", 0)
		Stop
	}
}